let path = require('path')
let fs = require('fs')
let rimraf = require('rimraf')
let shell = require('shelljs')

function generateCertbotCerts(args){
	let out = './output'
	let tmp = out+'/tmp'
	let perm = out+'/perm'
	let dirs = {
		sites: tmp+'/sites/',
		certs: perm+'/certs/',
		scripts: tmp+'/scripts/',
		confs: tmp+'/confs/',
		certbotcerts: perm+'/certs/certbot/',
	}
	let paths = {
		script: dirs.scripts+'script.tmp.sh',
		ssl: dirs.confs+'ssl.tmp.conf',
	}
	shell.cd(path.dirname(require.main.filename)+'/../')
	let sites = require('sites')(args)
	for(var dir of Object.keys(dirs)){
		if(dir.indexOf(tmp)) rimraf.sync(dir)
		fs.mkdirSync(dirs[dir], { recursive: true })
	}
	for(var site of sites){
		if(site.certbot){
			console.log('running syncVolumes')
			shell.exec(`
				${args.scripts.syncVolumes}
			`)
			let cert
			try {
				cert = fs.readFileSync(`${dirs.certbotcerts}${site.server_name}/privkey.pem`)
			} catch(err){
				// console.error(err)
			}
			console.log('cert,', cert)
			if(!cert){
				let torun = args.scripts.certbotcertgenerator({
					domains: '-d '+site.server_name,
					prod: args.prod,
					email: 'lopudesigns@gmail.com',
				})
				console.log(torun)
				console.log('running certbotcertgenerator')
				shell.exec(`
					${torun}
				`)
			}
			console.log(site.server_name+' already has a letsencrypt certificate')
			console.log('running syncVolumes')
			shell.exec(`
				${args.scripts.syncVolumes}
			`)
		
		}
	}
}

module.exports = generateCertbotCerts